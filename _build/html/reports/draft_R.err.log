Traceback (most recent call last):
  File "/home/jacob/miniconda3/envs/jupyterbook/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/jacob/miniconda3/envs/jupyterbook/lib/python3.10/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/jacob/.local/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
  File "/home/jacob/miniconda3/envs/jupyterbook/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/home/jacob/miniconda3/envs/jupyterbook/lib/python3.10/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/jacob/miniconda3/envs/jupyterbook/lib/python3.10/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/jacob/miniconda3/envs/jupyterbook/lib/python3.10/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import pandas as pd

# Dataset 1 variables and explanations
data1 = {
    "Variable": [
        "Country name", 
        "Regional indicator", 
        "ladder score", 
        "standard error of ladderscore", 
        "upperwhisker", 
        "lowerwhisker", 
        "logged GDP per capita", 
        "generosity", 
        "perception of corruption", 
        "ladder score in dystopia", 
        "explained by: log GDP per capita", 
        "explained by: Social support", 
        "explained by: Healthy life expectancy", 
        "explained by: Freedom to make life choices", 
        "explained by: Generosity", 
        "explained by: Perceptions of corruption", 
        "Dystopia + residual"
    ],
    "Explanation": [
        "Name of the country", 
        "Region the country belongs to", 
        "Happiness score on a scale from 0 to 10", 
        "The standard error of the ladder score", 
        "The upper whisker", 
        "The lower whisker", 
        "Logarithm of the GDP per capita", 
        "Perceived generosity", 
        "The perceived corruption on a scale from 0 to 1", 
        "Compared to dystopia", 
        "Compared to dystopia", 
        "Compared to dystopia", 
        "Compared to dystopia", 
        "Compared to dystopia", 
        "Compared to dystopia", 
        "Compared to dystopia", 
        "N.A.V."
    ]
}

# Dataset 2 variables and explanations
data2 = {
    "Variable": [
        "Countries and areas", 
        "OOSR_Pre0Primary_Age_Male", 
        "OOSR_Pre0Primary_Age_Female", 
        "OOSR_Primary_Age_Male", 
        "OOSR_Primary_Age_Female", 
        "OOSR_Lower_Secondary_Age_Male", 
        "OOSR_Lower_Secondary_Age_Female", 
        "OOSR_Upper_Secondary_Age_Male", 
        "OOSR_Upper_Secondary_Age_Female", 
        "Completion_Rate_Primary_Male", 
        "Completion_Rate_Primary_Female", 
        "Completion_Rate_Lower_Secondary_Male", 
        "Completion_Rate_Lower_Secondary_Female", 
        "Completion_Rate_Upper_Secondary_Male", 
        "Completion_Rate_Upper_Secondary_Female", 
        "Primary_End_Proficiency_Reading", 
        "Primary_End_Proficiency_Math", 
        "Gross_Primary_Education_Enrollment"
    ],
    "Explanation": [
        "Name of the country or area", 
        "Out-of-school rate for pre-primary age males", 
        "Out-of-school rate for pre-primary age females", 
        "Out-of-school rate for primary age males", 
        "Out-of-school rate for primary age females", 
        "Out-of-school rate for lower secondary age males", 
        "Out-of-school rate for lower secondary age females", 
        "Out-of-school rate for upper secondary age males", 
        "Out-of-school rate for upper secondary age females", 
        "Completion rate for primary education males", 
        "Completion rate for primary education females", 
        "Completion rate for lower secondary education males", 
        "Completion rate for lower secondary education females", 
        "Completion rate for upper secondary education males", 
        "Completion rate for upper secondary education females", 
        "Proficiency in reading at the end of primary education", 
        "Proficiency in math at the end of primary education", 
        "Gross enrollment rate for primary education"
    ]
}

# Creating DataFrames
df1 = pd.DataFrame(data1)
df2 = pd.DataFrame(data2)

# Creating an Excel writer
with pd.ExcelWriter('variables_explanation2.xlsx') as writer:
    df2.to_excel(writer, sheet_name='Dataset1', index=False)

print("Excel file created successfully!")

------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn[7], line 94[0m
[1;32m     91[0m df2 [38;5;241m=[39m pd[38;5;241m.[39mDataFrame(data2)
[1;32m     93[0m [38;5;66;03m# Creating an Excel writer[39;00m
[0;32m---> 94[0m [38;5;28;01mwith[39;00m [43mpd[49m[38;5;241;43m.[39;49m[43mExcelWriter[49m[43m([49m[38;5;124;43m'[39;49m[38;5;124;43mvariables_explanation2.xlsx[39;49m[38;5;124;43m'[39;49m[43m)[49m [38;5;28;01mas[39;00m writer:
[1;32m     95[0m     df2[38;5;241m.[39mto_excel(writer, sheet_name[38;5;241m=[39m[38;5;124m'[39m[38;5;124mDataset1[39m[38;5;124m'[39m, index[38;5;241m=[39m[38;5;28;01mFalse[39;00m)
[1;32m     97[0m [38;5;28mprint[39m([38;5;124m"[39m[38;5;124mExcel file created successfully![39m[38;5;124m"[39m)

File [0;32m~/miniconda3/envs/jupyterbook/lib/python3.10/site-packages/pandas/io/excel/_openpyxl.py:57[0m, in [0;36mOpenpyxlWriter.__init__[0;34m(self, path, engine, date_format, datetime_format, mode, storage_options, if_sheet_exists, engine_kwargs, **kwargs)[0m
[1;32m     44[0m [38;5;28;01mdef[39;00m [38;5;21m__init__[39m(
[1;32m     45[0m     [38;5;28mself[39m,
[1;32m     46[0m     path: FilePath [38;5;241m|[39m WriteExcelBuffer [38;5;241m|[39m ExcelWriter,
[0;32m   (...)[0m
[1;32m     55[0m ) [38;5;241m-[39m[38;5;241m>[39m [38;5;28;01mNone[39;00m:
[1;32m     56[0m     [38;5;66;03m# Use the openpyxl module as the Excel writer.[39;00m
[0;32m---> 57[0m     [38;5;28;01mfrom[39;00m [38;5;21;01mopenpyxl[39;00m[38;5;21;01m.[39;00m[38;5;21;01mworkbook[39;00m [38;5;28;01mimport[39;00m Workbook
[1;32m     59[0m     engine_kwargs [38;5;241m=[39m combine_kwargs(engine_kwargs, kwargs)
[1;32m     61[0m     [38;5;28msuper[39m()[38;5;241m.[39m[38;5;21m__init__[39m(
[1;32m     62[0m         path,
[1;32m     63[0m         mode[38;5;241m=[39mmode,
[0;32m   (...)[0m
[1;32m     66[0m         engine_kwargs[38;5;241m=[39mengine_kwargs,
[1;32m     67[0m     )

[0;31mModuleNotFoundError[0m: No module named 'openpyxl'

